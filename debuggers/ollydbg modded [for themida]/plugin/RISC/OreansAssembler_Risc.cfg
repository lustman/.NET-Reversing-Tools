// OreansAssembler_Risc.cfg
// First Line Contains the Handler data, the first number is
// the number of handlers, the rest are the handlers ( HIBYTE = ID, LOBYTE = Suffix )
// Second line, contain the number of arguments of the
// Equivalent Opcode
// The nexts lines contains the Argument Data as this
// First number contains: First Digit the Argument type
//			  (1:Register;3:MemoryAddress;2:Constant)
//			  Second Digit the Argument Size
//			  (1:Byte;2:Word;3:Dword;4:Qword)
// if the Type is Register or Constant, then the is only another
// number that specifies the handler position that contains
// the Constant or the register loaded
// if is a Memory Address, then the first number is followed
// by 4 numbers that contains The handler position of the First
// Memory Register, The Second memory Register, the Scale, and 
// the Memory Offset like this [ebp+ecx*4+10]. (Put FF if
// it doesn't have some of them)
// Finally the last line contains the opcode name + some extras
// about Memory Offset : Example
// 1101Cmp
// It means that has MemoryRegister1,MemoryRegister2,MemoryOffset
// and is Cmp Instruction (no matter if is on first or second argument)
// 0001Mov Only Has Memory Offset
// 1000Xor Only Has MemoryRegister1
// 0000Test Don't have a Memory Address Argument

//////////////////////////////////////////////////////////
// Xchg Instruction Routines
//////////////////////////////////////////////////////////
// Xchg Eax,edi
08	0283	0006	0283	0006	0283	0106	0283	0106
02
13	00
13	02
0000Xchg
08	0283	0005	0283	0005	0283	0105	0283	0105
02
12	00
12	02
0000Xchg
08	0283	0004	0283	0004	0283	0104	0283	0104
02
11	00
11	02
0000Xchg

// Xchg ecx,[000123]
08	0203	0006	0283	0006	0203	0106	0283	0106
02
13	02
33	FF	FF	FF	00
0001Xchg
08	0203	0005	0283	0005	0203	0105	0283	0105
02
12	02
32	FF	FF	FF	00
0001Xchg
08	0203	0004	0283	0004	0203	0104	0283	0104
02
11	02
31	FF	FF	FF	00
0001Xchg

// Xchg ecx,[eax]
08	028E	0006	0283	0006	028E	0106	0283	0106
02
13	02
33	00	FF	FF	FF
1000Xchg
08	028E	0005	0283	0005	028E	0105	0283	0105
02
12	02
32	00	FF	FF	FF
1000Xchg
08	028E	0004	0283	0004	028E	0104	0283	0104
02
11	02
31	00	FF	FF	FF
1000Xchg

// Xchg ecx,[eax+8]
0A	028E	0803	0006	0283	0006	028E	0803	0106	0283	0106
02
13	03
33	00	FF	FF	01
1001Xchg
0A	028E	0803	0005	0283	0005	028E	0803	0105	0283	0105
02
11	03
31	00	FF	FF	01
1001Xchg
0A	028E	0803	0004	0283	0004	028E	0803	0104	0283	0104
02
11	03
31	00	FF	FF	01
1001Xchg

// Xchg ecx,[esp+eax]
0A	028E	088E	0006	0283	0006	028E	088E	0106	0283	0106
02
13	03
33	00	01	FF	FF
1100Xchg
0A	028E	088E	0005	0283	0005	028E	088E	0105	0283	0105
02
12	03
32	00	01	FF	FF
1100Xchg
0A	028E	088E	0004	0283	0004	028E	088E	0104	0283	0104
02
11	03
31	00	01	FF	FF
1100Xchg

// Xchg ecx,[esp+eax+345]
0C	028E	088E	0803	0006	0283	0006	028E	088E	0803	0106	0283	0106
02
13	04
33	00	01	FF	02
1101Xchg
0C	028E	088E	0803	0005	0283	0005	028E	088E	0803	0105	0283	0105
02
12	04
32	00	01	FF	02
1101Xchg
0C	028E	088E	0803	0004	0283	0004	028E	088E	0803	0104	0283	0104
02
11	04
31	00	01	FF	02
1101Xchg

// Xchg ecx,[eax*2+esp]
0C	028E	1902	088E	0006	0283	0006	028E	1902	088E	0106	0283	0106
02
13	04
33	02	00	01	FF
1110Xchg
0C	028E	1902	088E	0005	0283	0005	028E	1902	088E	0105	0283	0105
02
12	04
32	02	00	01	FF
1110Xchg
0C	028E	1902	088E	0004	0283	0004	028E	1902	088E	0104	0283	0104
02
11	04
31	02	00	01	FF
1110Xchg

// Xchg ecx,[eax*2]
0A	028E	1902	0006	0283	0006	028E	1902	0106	0283	0106
02
13	03
33	FF	00	01	FF
0110Xchg
0A	028E	1902	0005	0283	0005	028E	1902	0105	0283	0105
02
12	03
32	FF	00	01	FF
0110Xchg
0A	028E	1902	0004	0283	0004	028E	1902	0104	0283	0104
02
11	03
31	FF	00	01	FF
0110Xchg

// Xchg ecx,[eax*2+123]
0C	028E	1902	0803	0006	0283	0006	028E	1902	0803	0106	0283	0106
02
13	04
33	FF	00	01	02
0111Xchg
0C	028E	1902	0803	0005	0283	0005	028E	1902	0803	0105	0283	0105
02
12	04
32	FF	00	01	02
0111Xchg
0C	028E	1902	0803	0004	0283	0004	028E	1902	0803	0104	0283	0104
02
11	04
31	FF	00	01	02
0111Xchg

// Xchg ecx,[esp+eax*2+123]
0E	028E	1902	088E	0803	0006	0283	0006	028E	1902	088E	0803	0106	0283	0106
02
13	05
33	02	00	01	03
1111Xchg
0E	028E	1902	088E	0803	0005	0283	0005	028E	1902	088E	0803	0105	0283	0105
02
12	05
32	02	00	01	03
1111Xchg
0E	028E	1902	088E	0803	0004	0283	0004	028E	1902	088E	0803	0104	0283	0104
02
11	05
31	02	00	01	03
1111Xchg


//////////////////////////////////////////////////////////
// Imul Instruction Routines (Three operands)
//////////////////////////////////////////////////////////
09	0283	0006	0283	0106	0283	0006	0022	FDFE	0106
03
13	02
13	00
23	06
0000
09	0283	0005	0283	0105	0283	0005	0021	FDFE	0105
03
12	02
12	00
22	06
0000
09	0283	0004	0283	0104	0283	0004	0020	FDFE	0104
03
11	02
11	00
21	06
0000

//////////////////////////////////////////////////////////
// Imul Three operand (template IMUL REGA, REGA, IMMC)
//////////////////////////////////////////////////////////
// Imul Eax, Eax, 4
05	0283	0006	0022	2D1A	0106
03
13	00
13	00
23	02
0000Imul
05	0283	0005	0021	2D19	0105
03
12	00
12	00
22	02
0000Imul
05	0283	0004	0020	2D18	0104
03
11	00
11	00
21	02
0000Imul


//////////////////////////////////////////////////////////
// IDIV/DIV Instruction Routines (One operands)
//////////////////////////////////////////////////////////
// Div Esp
09	008A	0283	0006	0283	0006	FDFE	0283	0106	018A
01
13	03
0000
09	0089	0283	0005	0283	0005	FDFE	0283	0105	0189
01
12	03
0000
09	0088	0283	0004	0283	0004	FDFE	0283	0104	0188
01
11	03
0000

// Div [234234]
09	008A	0283	0006	0203	0006	FDFE	0283	0106	018A
01
33	FF	FF	FF	03
0001
09	0089	0283	0005	0203	0005	FDFE	0283	0105	0189
01
32	FF	FF	FF	03
0001
09	0088	0283	0004	0203	0004	FDFE	0283	0104	0188
01
31	FF	FF	FF	03
0001

// Div [eax]
09	008A	0283	0006	028E	0006	FDFE	0283	0106	018A
01
33	03	FF	FF	FF
1000
09	0089	0283	0005	028E	0005	FDFE	0283	0105	0189
01
32	03	FF	FF	FF
1000
09	0088	0283	0004	028E	0004	FDFE	0283	0104	0188
01
31	03	FF	FF	FF
1000

// Div [eax+8]
0A	008A	0283	0006	028E	0803	0006	FDFE	0283	0106	018A
01
33	03	FF	FF	04
1001
0A	0089	0283	0005	028E	0803	0005	FDFE	0283	0105	0189
01
32	03	FF	FF	04
1001
0A	0088	0283	0004	028E	0803	0004	FDFE	0283	0104	0188
01
31	03	FF	FF	04
1001

// Div [eax+esp]
0A	008A	0283	0006	028E	088E	0006	FDFE	0283	0106	018A
01
33	03	04	FF	FF
1100
0A	0089	0283	0005	028E	088E	0005	FDFE	0283	0105	0189
01
32	03	04	FF	FF
1100
0A	0088	0283	0004	028E	088E	0004	FDFE	0283	0104	0188
01
31	03	04	FF	FF
1100

// Div [eax+esp+23423]
0B	008A	0283	0006	028E	088E	0803	0006	FDFE	0283	0106	018A
01
33	03	04	FF	05
1101
0B	0089	0283	0005	028E	088E	0803	0005	FDFE	0283	0105	0189
01
32	03	04	FF	05
1101
0B	0088	0283	0004	028E	088E	0803	0004	FDFE	0283	0104	0188
01
31	03	04	FF	05
1101

// Div [eax+esi*2]
0B	008A	0283	0006	028E	1902	088E	0006	FDFE	0283	0106	018A
01
33	05	03	04	FF
1110
0B	0089	0283	0005	028E	1902	088E	0005	FDFE	0283	0105	0189
01
32	05	03	04	FF
1110
0B	0088	0283	0004	028E	1902	088E	0004	FDFE	0283	0104	0188
01
31	05	03	04	FF
1110


// Div [eax*2]
0A	008A	0283	0006	028E	1902	0006	FDFE	0283	0106	018A
01
33	FF	03	04	FF
0110
0A	0089	0283	0005	028E	1902	0005	FDFE	0283	0105	0189
01
32	FF	03	04	FF
0110
0A	0088	0283	0004	028E	1902	0004	FDFE	0283	0104	0188
01
31	FF	03	04	FF
0110

// Div [eax*2+23424]
0B	008A	0283	0006	028E	1902	0803	0006	FDFE	0283	0106	018A
01
33	FF	03	04	05
0111
0B	0089	0283	0005	028E	1902	0803	0005	FDFE	0283	0105	0189
01
32	FF	03	04	05
0111
0B	0088	0283	0004	028E	1902	0803	0004	FDFE	0283	0104	0188
01
31	FF	03	04	05
0111

// Div [esp+eax*2+234234]
0C	008A	0283	0006	028E	1902	088E	0803	0006	FDFE	0283	0106	018A
01
33	05	03	04	06
1111
0C	0089	0283	0005	028E	1902	088E	0803	0005	FDFE	0283	0105	0189
01
32	05	03	04	06
1111
0C	0088	0283	0004	028E	1902	088E	0803	0004	FDFE	0283	0104	0188
01
31	05	03	04	06
1111


//////////////////////////////////////////////////////////
// IMUL/MUL Instruction Routines (One operands)
//////////////////////////////////////////////////////////
// Imul Esp
08	0283	0006	0283	0006	FDFE	0283	0106	018A
01
13	02
0000
08	0283	0005	0283	0005	FDFE	0283	0105	0189
01
12	02
0000
08	0283	0004	0283	0004	FDFE	0283	0104	0188
01
11	02
0000

// Imul [234234]
08	0283	0006	0203	0006	FDFE	0283	0106	018A
01
33	FF	FF	FF	02
0001
08	0283	0005	0203	0005	FDFE	0283	0105	0189
01
32	FF	FF	FF	02
0001
08	0283	0004	0203	0004	FDFE	0283	0104	0188
01
31	FF	FF	FF	02
0001

// Imul [eax]
08	0283	0006	028E	0006	FDFE	0283	0106	018A
01
33	02	FF	FF	FF
1000
08	0283	0005	028E	0005	FDFE	0283	0105	0189
01
32	02	FF	FF	FF
1000
08	0283	0004	028E	0004	FDFE	0283	0104	0188
01
31	02	FF	FF	FF
1000

// Imul [eax+8]
09	0283	0006	028E	0803	0006	FDFE	0283	0106	018A
01
33	02	FF	FF	03
1001
09	0283	0005	028E	0803	0005	FDFE	0283	0105	0189
01
32	02	FF	FF	03
1001
09	0283	0004	028E	0803	0004	FDFE	0283	0104	0188
01
31	02	FF	FF	03
1001

// Imul [eax+esp]
09	0283	0006	028E	088E	0006	FDFE	0283	0106	018A
01
33	02	03	FF	FF
1100
09	0283	0005	028E	088E	0005	FDFE	0283	0105	0189
01
32	02	03	FF	FF
1100
09	0283	0004	028E	088E	0004	FDFE	0283	0104	0188
01
31	02	03	FF	FF
1100

// Imul [eax+esp+23423]
0A	0283	0006	028E	088E	0803	0006	FDFE	0283	0106	018A
01
33	02	03	FF	04
1101
0A	0283	0005	028E	088E	0803	0005	FDFE	0283	0105	0189
01
32	02	03	FF	04
1101
0A	0283	0004	028E	088E	0803	0004	FDFE	0283	0104	0188
01
31	02	03	FF	04
1101

// Imul [eax+esi*2]
0A	0283	0006	028E	1902	088E	0006	FDFE	0283	0106	018A
01
33	04	02	03	FF
1110
0A	0283	0005	028E	1902	088E	0005	FDFE	0283	0105	0189
01
32	04	02	03	FF
1110
0A	0283	0004	028E	1902	088E	0004	FDFE	0283	0104	0188
01
31	04	02	03	FF
1110


// Imul [eax*2]
09	0283	0006	028E	1902	0006	FDFE	0283	0106	018A
01
33	FF	02	03	FF
0110
09	0283	0005	028E	1902	0005	FDFE	0283	0105	0189
01
32	FF	02	03	FF
0110
09	0283	0004	028E	1902	0004	FDFE	0283	0104	0188
01
31	FF	02	03	FF
0110

// Imul [eax*2+23424]
0A	0283	0006	028E	1902	0803	0006	FDFE	0283	0106	018A
01
33	FF	02	03	04
0111
0A	0283	0005	028E	1902	0803	0005	FDFE	0283	0105	0189
01
32	FF	02	03	04
0111
0A	0283	0004	028E	1902	0803	0004	FDFE	0283	0104	0188
01
31	FF	02	03	04
0111

// Imul [esp+eax*2+234234]
0B	0283	0006	028E	1902	088E	0803	0006	FDFE	0283	0106	018A
01
33	04	02	03	05
1111
0B	0283	0005	028E	1902	088E	0803	0005	FDFE	0283	0105	0189
01
32	04	02	03	05
1111
0B	0283	0004	028E	1902	088E	0803	0004	FDFE	0283	0104	0188
01
31	04	02	03	05
1111



//////////////////////////////////////////////////////////
// Movzx/Movsx Instruction Routines (One operands)
//////////////////////////////////////////////////////////
// movsx dx, dh Wrong virtualized!!!

//////////////////////////////////////////////////////////
// Common Instruction Routines (Two operands, save type and non-save)
//////////////////////////////////////////////////////////
// Xor Eax, 10000.
05	0283	0006	0022	FEFE	0106
02
13	00
23	02
0000
05	0283	0005	0021	FEFE	0105
02
12	00
22	02
0000
05	0283	0004	0020	FEFE	0104
02
11	00
21	02
0000

// Xor Ecx,Edx
07	0283	0006	0283	0006	FEFE	0283	0106
02
13	00
13	02
0000
07	0283	0005	0283	0005	FEFE	0283	0105
02
12	00
12	02
0000
07	0283	0004	0283	0004	FEFE	0283	0104
02
11	00
11	02
0000

// Xor Ecx, [234234]
07	0283	0006	0203	0006	FEFE	0283	0106
02
13	00
33	FF	FF	FF	02
0001
07	0283	0005	0203	0005	FEFE	0283	0105
02
12	00
32	FF	FF	FF	02
0001
07	0283	0004	0203	0004	FEFE	0283	0104
02
11	00
31	FF	FF	FF	02
0001

// xor edx, [eax]
07	0283	0006	028E	0006	FEFE	0283	0106
02
13	00
33	02	FF	FF	FF
1000
07	0283	0005	028E	0005	FEFE	0283	0105
02
12	00
32	02	FF	FF	FF
1000
07	0283	0004	028E	0004	FEFE	0283	0104
02
11	00
31	02	FF	FF	FF
1000

// xor edx, [eax+8]
08	0283	0006	028E	0803	0006	FEFE	0283	0106
02
13	00
33	02	FF	FF	03
1001
08	0283	0005	028E	0803	0005	FEFE	0283	0105
02
12	00
32	02	FF	FF	03
1001
08	0283	0004	028E	0803	0004	FEFE	0283	0104
02
11	00
31	02	FF	FF	03
1001

// xor edx, [eax+esp]
08	0283	0006	028E	088E	0006	FEFE	0283	0106
02
13	00
33	02	03	FF	FF
1100
08	0283	0005	028E	088E	0005	FEFE	0283	0105
02
12	00
32	02	03	FF	FF
1100
08	0283	0004	028E	088E	0004	FEFE	0283	0104
02
11	00
31	02	03	FF	FF
1100

// xor edx, [eax+esp+23423]
09	0283	0006	028E	088E	0803	0006	FEFE	0283	0106
02
13	00
33	02	03	FF	04
1101
09	0283	0005	028E	088E	0803	0005	FEFE	0283	0105
02
12	00
32	02	03	FF	04
1101
09	0283	0004	028E	088E	0803	0004	FEFE	0283	0104
02
11	00
31	02	03	FF	04
1101

// xor edx, [eax+esi*2]
09	0283	0006	028E	1902	088E	0006	FEFE	0283	0106
02
13	00
33	04	02	03	FF
1110
09	0283	0005	028E	1902	088E	0005	FEFE	0283	0105
02
12	00
32	04	02	03	FF
1110
09	0283	0004	028E	1902	088E	0004	FEFE	0283	0104
02
11	00
31	04	02	03	FF
1110


// xor edx, [eax*2]
08	0283	0006	028E	1902	0006	FEFE	0283	0106
02
13	00
33	FF	02	03	FF
0110
08	0283	0005	028E	1902	0005	FEFE	0283	0105
02
12	00
32	FF	02	03	FF
0110
08	0283	0004	028E	1902	0004	FEFE	0283	0104
02
11	00
31	FF	02	03	FF
0110

// xor edx, [eax*2+23424]
09	0283	0006	028E	1902	0803	0006	FEFE	0283	0106
02
13	00
33	FF	02	03	04
0111
09	0283	0005	028E	1902	0803	0005	FEFE	0283	0105
02
12	00
32	FF	02	03	04
0111
09	0283	0004	028E	1902	0803	0004	FEFE	0283	0104
02
11	00
31	FF	02	03	04
0111

// xor edx, [esp+eax*2+234234]
0A	0283	0006	028E	1902	088E	0803	0006	FEFE	0283	0106
02
13	00
33	04	02	03	05
1111
0A	0283	0005	028E	1902	088E	0803	0005	FEFE	0283	0105
02
12	00
32	04	02	03	05
1111
0A	0283	0004	028E	1902	088E	0803	0004	FEFE	0283	0104
02
11	00
31	04	02	03	05
1111


// xor dword ptr ds:[234234],ecx
07	0203	0006	0283	0006	FEFE	0203	0106
02
33	FF	FF	FF	00
13	02
0001
07	0203	0005	0283	0005	FEFE	0203	0105
02
32	FF	FF	FF	00
12	02
0001
07	0203	0004	0283	0004	FEFE	0203	0104
02
31	FF	FF	FF	00
11	02
0001


// xor [eax],ecx
07	028E	0006	0283	0006	FEFE	028E	0106
02
33	00	FF	FF	FF
13	02
1000
07	028E	0005	0283	0005	FEFE	028E	0105
02
32	00	FF	FF	FF
12	02
1000
07	028E	0004	0283	0004	FEFE	028E	0104
02
31	00	FF	FF	FF
11	02
1000

// xor [esp+87777],ecx
09	028E	0803	0006	0283	0006	FEFE	028E	0803	0106
02
33	00	FF	FF	01
13	03
1001
09	028E	0803	0005	0283	0005	FEFE	028E	0803	0105
02
32	00	FF	FF	01
12	03
1001
09	028E	0803	0004	0283	0004	FEFE	028E	0803	0104
02
31	00	FF	FF	01
11	03
1001

// xor [eax+esp],ecx
09	028E	088E	0006	0283	0006	FEFE	028E	088E	0106
02
33	00	01	FF	FF
13	03
1100
09	028E	088E	0005	0283	0005	FEFE	028E	088E	0105
02
32	00	01	FF	FF
12	03
1100
09	028E	088E	0004	0283	0004	FEFE	028E	088E	0104
02
31	00	01	FF	FF
11	03
1100

// xor [eax+esp+23423],ecx
0B	028E	088E	0803	0006	0283	0006	FEFE	028E	088E	0803	0106
02
33	00	01	FF	02
13	04
1101
0B	028E	088E	0803	0005	0283	0005	FEFE	028E	088E	0803	0105
02
32	00	01	FF	02
12	04
1101
0B	028E	088E	0803	0004	0283	0004	FEFE	028E	088E	0803	0104
02
31	00	01	FF	02
11	04
1101

// xor [esp+eax*2],ecx
0B	028E	1902	088E	0006	0283	0006	FEFE	028E	1902	088E	0106
02
33	02	00	01	FF
13	04
1110
0B	028E	1902	088E	0005	0283	0005	FEFE	028E	1902	088E	0105
02
32	02	00	01	FF
12	04
1110
0B	028E	1902	088E	0004	0283	0004	FEFE	028E	1902	088E	0104
02
31	02	00	01	FF
11	04
1110

// xor [esi*2],ecx
09	028E	1902	0006	0283	0006	FEFE	028E	1902	0106
02
33	FF	00	01	FF
13	03
0110
09	028E	1902	0005	0283	0005	FEFE	028E	1902	0105
02
32	FF	00	01	FF
12	03
0110
09	028E	1902	0004	0283	0004	FEFE	028E	1902	0104
02
31	FF	00	01	FF
11	03
0110

// xor [esi*2+21432],ecx
0B	028E	1902	0803	0006	0283	0006	FEFE	028E	1902	0803	0106
02
33	FF	00	01	02
13	04
0111
0B	028E	1902	0803	0005	0283	0005	FEFE	028E	1902	0803	0105
02
32	FF	00	01	02
12	04
0111
0B	028E	1902	0803	0004	0283	0004	FEFE	028E	1902	0803	0104
02
31	FF	00	01	02
11	04
0111

// xor [esp+eax*2+234234],ecx
0D	028E	1902	088E	0803	0006	0283	0006	FEFE	028E	1902	088E	0803	0106
02
33	02	00	01	03
13	05
1111
0D	028E	1902	088E	0803	0005	0283	0005	FEFE	028E	1902	088E	0803	0105
02
32	02	00	01	03
12	05
1111
0D	028E	1902	088E	0803	0004	0283	0004	FEFE	028E	1902	088E	0803	0104
02
31	02	00	01	03
11	05
1111


// xor dword ptr ds:[234234],5635356
05	0203	0006	0022	FEFE	0106
02
33	FF	FF	FF	00
23	02
0001
05	0203	0005	0021	FEFE	0105
02
32	FF	FF	FF	00
22	02
0001
05	0203	0004	0020	FEFE	0104
02
31	FF	FF	FF	00
21	02
0001

// xor dword ptr [eax],5635356
05	028E	0006	0022	FEFE	0106
02
33	00	FF	FF	FF
23	02
1000
05	028E	0005	0021	FEFE	0105
02
32	00	FF	FF	FF
22	02
1000
05	028E	0004	0020	FEFE	0104
02
31	00	FF	FF	FF
21	02
1000

// xor dword ptr [eax+8],5635356
06	028E	0803	0006	0022	FEFE	0106
02
33	00	FF	FF	01
23	03
1001
06	028E	0803	0005	0021	FEFE	0105
02
32	00	FF	FF	01
22	03
1001
06	028E	0803	0004	0020	FEFE	0104
02
31	00	FF	FF	01
21	03
1001

// xor dword ptr [eax+esi],5635356
06	028E	088E	0006	0022	FEFE	0106
02
33	00	01	FF	FF
23	03
1100
06	028E	088E	0005	0021	FEFE	0105
02
32	00	01	FF	FF
22	03
1100
06	028E	088E	0004	0020	FEFE	0104
02
31	00	01	FF	FF
21	03
1100

// xor dword ptr [eax+esp+23423],5635356
07	028E	088E	0803	0006	0022	FEFE	0106
02
33	00	01	FF	02
23	04
1101
07	028E	088E	0803	0005	0021	FEFE	0105
02
32	00	01	FF	02
22	04
1101
07	028E	088E	0803	0004	0020	FEFE	0104
02
31	00	01	FF	02
21	04
1101

// xor dword ptr [esp+eax*2],5635356
07	028E	1902	088E	0006	0022	FEFE	0106
02
33	02	00	01	FF
23	04
1110
07	028E	1902	088E	0005	0021	FEFE	0105
02
32	02	00	01	FF
22	04
1110
07	028E	1902	088E	0004	0020	FEFE	0104
02
31	02	00	01	FF
21	04
1110

// xor dword ptr [esi*2],5635356
06	028E	1902	0006	0022	FEFE	0106
02
33	FF	00	01	FF
23	03
0110
06	028E	1902	0005	0021	FEFE	0105
02
32	FF	00	01	FF
22	03
0110
06	028E	1902	0004	0020	FEFE	0104
02
31	FF	00	01	FF
21	03
0110

// xor dword ptr [esi*2+21432],5635356
07	028E	1902	0803	0006	0022	FEFE	0106
02
33	FF	00	01	02
23	04
0111
07	028E	1902	0803	0005	0021	FEFE	0105
02
32	FF	00	01	02
22	04
0111
07	028E	1902	0803	0004	0020	FEFE	0104
02
31	FF	00	01	02
21	04
0111

// xor dword ptr [esp+eax*2+234234],5635356
08	028E	1902	088E	0803	0006	0022	FEFE	0106
02
33	02	00	01	03
23	05
1111
08	028E	1902	088E	0803	0005	0021	FEFE	0105
02
32	02	00	01	03
22	05
1111
08	028E	1902	088E	0803	0004	0020	FEFE	0104
02
31	02	00	01	03
21	05
1111



//////////////////////////////////////////////////////////
// Pop Instruction Routines
//////////////////////////////////////////////////////////
// POP ESP is decoded as MOV ESP, [ESP] -_-
// Pop Eax
08	028E	0006	0283	0106	028E	0802	0001	018A
01
13	02
0000Pop
08	028E	0005	0283	0105	028E	0802	0001	018A
01
12	02
0000Pop


// Pop [2545]
08	028E	0006	0203	0106	028E	0802	0001	018A
01
33	FF	FF	FF	02
0001Pop
08	028E	0005	0203	0105	028E	0802	0001	018A
01
32	FF	FF	FF	02
0001Pop

// Pop [Eax]
08	028E	0006	028E	0106	028E	0802	0001	018A
01
33	02	FF	FF	FF
1000Pop
08	028E	0005	028E	0105	028E	0802	0001	018A
01
32	02	FF	FF	FF
1000Pop
// ESP VARIANT
09	028E	0006	028E	0802	0106	028E	0802	0001	018A
01
33	02	FF	FF	FF
1000Pop
09	028E	0005	028E	0802	0105	028E	0802	0001	018A
01
32	02	FF	FF	FF
1000Pop

// Pop [Eax+8]
09	028E	0006	028E	0803	0106	028E	0802	0001	018A
01
33	02	FF	FF	03
1001Pop
09	028E	0005	028E	0803	0105	028E	0802	0001	018A
01
32	02	FF	FF	03
1001Pop


// Pop [Eax+esi]
09	028E	0006	028E	088E	0106	028E	0802	0001	018A
01
33	02	03	FF	FF
1100Pop
09	028E	0005	028E	088E	0105	028E	0802	0001	018A
01
32	02	03	FF	FF
1100Pop

// Pop [Eax+esi+4234]
0A	028E	0006	028E	088E	0803	0106	028E	0802	0001	018A
01
33	02	03	FF	04
1101Pop
0A	028E	0005	028E	088E	0803	0105	028E	0802	0001	018A
01
32	02	03	FF	04
1101Pop

// Pop [Eax+Eax*2]
0A	028E	0006	028E	1902	088E	0106	028E	0802	0001	018A
01
33	04	02	03	FF
1110Pop
0A	028E	0005	028E	1902	088E	0105	028E	0802	0001	018A
01
32	04	02	03	FF
1110Pop

// Pop [Eax*2]
09	028E	0006	028E	1902	0106	028E	0802	0001	018A
01
33	FF	02	03	FF
0110Pop
09	028E	0005	028E	1902	0105	028E	0802	0001	018A
01
32	FF	02	03	FF
0110Pop

// Pop [Eax*2+234234]
0A	028E	0006	028E	1902	0803	0106	028E	0802	0001	018A
01
33	FF	02	03	04
0111Pop
0A	028E	0005	028E	1902	0803	0105	028E	0802	0001	018A
01
32	FF	02	03	04
0111Pop

// Pop [Eax*2+234234]
0B	028E	0006	028E	1902	088E	0803	0106	028E	0802	0001	018A
01
33	04	02	03	05
1111Pop
0B	028E	0005	028E	1902	088E	0803	0105	028E	0802	0001	018A
01
32	04	02	03	05
1111Pop

//////////////////////////////////////////////////////////
// Lea Instruction Routines
//////////////////////////////////////////////////////////
// Lea Ecx, [Offset]
04	0203	0001	0283	0106
02
13	02
33	FF	FF	FF	00
0001Lea
04	0203	0001	0283	0105
02
12	02
32	FF	FF	FF	00
0001Lea



// Lea Edx, [Eax]
04	028E	0001	0283	0106
02
13	02
33	00	FF	FF	FF
1000Lea
04	028E	0001	0283	0105
02
12	02
32	00	FF	FF	FF
1000Lea



// Lea Eax, [Ebp+8]
05	028E	0803	0001	0283	0106
02
13	03
33	00	FF	FF	01
1001Lea
05	028E	0803	0001	0283	0105
02
12	03
32	00	FF	FF	01
1001Lea



// Lea Edx, [Eax+esi]
05	028E	088E	0001	0283	0106
02
13	03
33	00	01	FF	FF
1100Lea
05	028E	088E	0001	0283	0105
02
12	03
32	00	01	FF	FF
1100Lea




// Lea Edx, [eax+esi+23423]
06	028E	088E	0803	0001	0283	0106
02
13	04
33	00	01	FF	02
1101Lea
06	028E	088E	0803	0001	0283	0105
02
12	04
32	00	01	FF	02
1101Lea



// Lea Edx, [esi*2+eax]
06	028E	1902	088E	0001	0283	0106
02
13	04
33	02	00	01	FF
1110Lea
06	028E	1902	088E	0001	0283	0105
02
12	04
32	02	00	01	FF
1110Lea




// Lea Edx, [eax*2]
05	028E	1902	0001	0283	0106
02
13	03
33	FF	00	01	FF
0110Lea
05	028E	1902	0001	0283	0105
02
12	03
32	FF	00	01	FF
0110Lea

// Lea Edx, [Eax*2+0adfaf]
06	028E	1902	0803	0001	0283	0106
02
13	04
33	FF	00	01	02
0111Lea
06	028E	1902	0803	0001	0283	0105
02
12	04
32	FF	00	01	02
0111Lea


// Lea Edx, [Edi+Eax*2+0adfaf]
07	028E	1902	088E	0803	0001	0283	0106
02
13	05
33	02	00	01	03
1111Lea
07	028E	1902	088E	0803	0001	0283	0105
02
12	05
32	02	00	01	03
1111Lea



//////////////////////////////////////////////////////////
// Mov Instruction Routines
//////////////////////////////////////////////////////////
// Mov Ecx, 10000 (constant) same for esp
// LACKING PROG
// Mov ECx, 10000	
// DWORD is coded on different data
03	0022	0283	0106
02
13	01
23	00
0000Mov
03	0021	0283	0105
02
12	01
22	00
0000Mov
03	0020	0283	0104
02
11	01
21	00
0000Mov

// Mov ecx, edx
04	0283	0006	0283	0106
02
13	02
13	00
0000Mov
04	0283	0005	0283	0105
02
12	02
12	00
0000Mov
04	0283	0004	0283	0104
02
11	02
11	00
0000Mov



// Mov Ecx, [Offset]
04	0203	0006	0283	0106
02
13	02
33	FF	FF	FF	00
0001Mov
04	0203	0005	0283	0105
02
12	02
32	FF	FF	FF	00
0001Mov
04	0203	0004	0283	0104
02
11	02
31	FF	FF	FF	00
0001Mov


// Mov Edx, [Eax]
04	028E	0006	0283	0106
02
13	02
33	00	FF	FF	FF
1000Mov
04	028E	0005	0283	0105
02
12	02
32	00	FF	FF	FF
1000Mov
04	028E	0004	0283	0104
02
11	02
31	00	FF	FF	FF
1000Mov



// Mov Eax, [Ebp+8]
05	028E	0803	0006	0283	0106
02
13	03
33	00	FF	FF	01
1001Mov
05	028E	0803	0005	0283	0105
02
12	03
32	00	FF	FF	01
1001Mov
05	028E	0803	0004	0283	0104
02
11	03
31	00	FF	FF	01
1001Mov


// Mov Edx, [Eax+esi]
05	028E	088E	0006	0283	0106
02
13	03
33	00	01	FF	FF
1100Mov
05	028E	088E	0005	0283	0105
02
12	03
32	00	01	FF	FF
1100Mov
05	028E	088E	0004	0283	0104
02
11	03
31	00	01	FF	FF
1100Mov



// Mov Edx, [eax+esi+23423]
06	028E	088E	0803	0006	0283	0106
02
13	04
33	00	01	FF	02
1101Mov
06	028E	088E	0803	0005	0283	0105
02
12	04
32	00	01	FF	02
1101Mov
06	028E	088E	0803	0004	0283	0104
02
11	04
31	00	01	FF	02
1101Mov


// Mov Edx, [esi*2+eax]
06	028E	1902	088E	0006	0283	0106
02
13	04
33	02	00	01	FF
1110Mov
06	028E	1902	088E	0005	0283	0105
02
12	04
32	02	00	01	FF
1110Mov
06	028E	1902	088E	0004	0283	0104
02
11	04
31	02	00	01	FF
1110Mov




// Mov Edx, [eax*2]
05	028E	1902	0006	0283	0106
02
13	03
33	FF	00	01	FF
0110Mov
05	028E	1902	0005	0283	0105
02
12	03
32	FF	00	01	FF
0110Mov
05	028E	1902	0004	0283	0104
02
11	03
31	FF	00	01	FF
0110Mov


// Mov Edx, [Eax*2+0adfaf]
06	028E	1902	0803	0006	0283	0106
02
13	04
33	FF	00	01	02
0111Mov
06	028E	1902	0803	0005	0283	0105
02
12	04
32	FF	00	01	02
0111Mov
06	028E	1902	0803	0004	0283	0104
02
11	04
31	FF	00	01	02
0111Mov



// Mov Edx, [Edi+Eax*2+0adfaf]
07	028E	1902	088E	0803	0006	0283	0106
02
13	05
33	02	00	01	03
1111Mov
07	028E	1902	088E	0803	0005	0283	0105
02
12	05
32	02	00	01	03
1111Mov
07	028E	1902	088E	0803	0004	0283	0104
02
11	05
31	02	00	01	03
1111Mov

// mov dword ptr ds:[234234],ecx
04	0283	0006	0203	0106
02
33	FF	FF	FF	02
13	00
0001Mov
04	0283	0005	0203	0105
02
32	FF	FF	FF	02
12	00
0001Mov
04	0283	0004	0203	0104
02
31	FF	FF	FF	02
11	00
0001Mov


// Mov [Eax],Ecx
04	0283	0006	028E	0106
02
33	02	FF	FF	FF
13	00
1000Mov
04	0283	0005	028E	0105
02
32	02	FF	FF	FF
12	00
1000Mov
04	0283	0004	028E	0104
02
31	02	FF	FF	FF
11	00
1000Mov


// mov [eax+8],ecx
05	0283	0006	028E	0803	0106
02
33	02	FF	FF	03
13	00
1001Mov
05	0283	0005	028E	0803	0105
02
32	02	FF	FF	03
12	00
1001Mov
05	0283	0004	028E	0803	0104
02
31	02	FF	FF	03
11	00
1001Mov


// mov [eax+esi],ecx
05	0283	0006	028E	088E	0106
02
33	02	03	FF	FF
13	00
1100Mov

// mov [eax+esi],ecx
05	0283	0005	028E	088E	0105
02
32	02	03	FF	FF
12	00
1100Mov

// mov [eax+esi],ecx
05	0283	0004	028E	088E	0104
02
31	02	03	FF	FF
11	00
1100Mov



// mov [eax+esi+23423],ecx
06	0283	0006	028E	088E	0803	0106
02
33	02	03	FF	04
13	00
1101Mov
06	0283	0005	028E	088E	0803	0105
02
32	02	03	FF	04
12	00
1101Mov
06	0283	0004	028E	088E	0803	0104
02
31	02	03	FF	04
11	00
1101Mov


// mov [eax+esi*2],ecx
06	0283	0006	028E	1902	088E	0106
02
33	04	02	03	FF
13	00
1110Mov
06	0283	0005	028E	1902	088E	0105
02
32	04	02	03	FF
12	00
1110Mov
06	0283	0004	028E	1902	088E	0104
02
31	04	02	03	FF
11	00
1110Mov


// mov [esi*2],ecx
05	0283	0006	028E	1902	0106
02
33	FF	02	03	FF
13	00
0110Mov
05	0283	0005	028E	1902	0105
02
32	FF	02	03	FF
12	00
0110Mov
05	0283	0004	028E	1902	0104
02
31	FF	02	03	FF
11	00
0110Mov



// mov [esi*2+21432],ecx
06	0283	0006	028E	1902	0803	0106
02
33	FF	02	03	04
13	00
0111Mov
06	0283	0005	028E	1902	0803	0105
02
32	FF	02	03	04
12	00
0111Mov
06	0283	0004	028E	1902	0803	0104
02
31	FF	02	03	04
11	00
0111Mov


// mov [esp+eax*2+234234],ecx
07	0283	0006	028E	1902	088E	0803	0106
02
33	04	02	03	05
13	00
1111Mov
07	0283	0005	028E	1902	088E	0803	0105
02
32	04	02	03	05
12	00
1111Mov
07	0283	0004	028E	1902	088E	0803	0104
02
31	04	02	03	05
11	00
1111Mov



// Mov [000392fa], 5635356.
03	0022	0203	0106
02
33	FF	FF	FF	01
23	00
0001Mov
03	0021	0203	0105
02
32	FF	FF	FF	01
22	00
0001Mov
03	0020	0203	0104
02
31	FF	FF	FF	01
21	00
0001Mov

// mov dword ptr [eax],5635356.
03	0022	028E	0106
02
33	01	FF	FF	FF
23	00
1000Mov
03	0021	028E	0105
02
32	01	FF	FF	FF
22	00
1000Mov
03	0020	028E	0104
02
31	01	FF	FF	FF
21	00
1000Mov


// mov dword ptr [eax+8],5635356
04	0022	028E	0803	0106
02
33	01	FF	FF	02
23	00
1001Mov
04	0021	028E	0803	0105
02
32	01	FF	FF	02
22	00
1001Mov
04	0020	028E	0803	0104
02
31	01	FF	FF	02
21	00
1001Mov

// mov dword ptr [eax+esp],5635356
04	0022	028E	088E	0106
02
33	01	02	FF	FF
23	00
1100Mov
04	0021	028E	088E	0105
02
32	01	02	FF	FF
22	00
1100Mov
04	0020	028E	088E	0104
02
31	01	02	FF	FF
21	00
1100Mov


// mov dword ptr [eax+esp+23423],5635356
05	0022	028E	088E	0803	0106
02
33	01	02	FF	03
23	00
1101Mov
05	0021	028E	088E	0803	0105
02
32	01	02	FF	03
22	00
1101Mov
05	0020	028E	088E	0803	0104
02
31	01	02	FF	03
21	00
1101Mov



// mov dword ptr [esp+eax*2],5635356
05	0022	028E	1902	088E	0106
02
33	03	01	02	FF
23	00
1110Mov
05	0021	028E	1902	088E	0105
02
32	03	01	02	FF
22	00
1110Mov
05	0020	028E	1902	088E	0104
02
31	03	01	02	FF
21	00
1110Mov


// mov dword ptr [esp+eax*2+234234],5635356
06	0022	028E	1902	088E	0803	0106
02
33	03	01	02	04
23	00
1111Mov
06	0021	028E	1902	088E	0803	0105
02
32	03	01	02	04
22	00
1111Mov
06	0020	028E	1902	088E	0803	0104
02
31	03	01	02	04
21	00
1111Mov




// mov dword ptr [esi*2],5635356
04	0022	028E	1902	0106
02
33	FF	01	02	FF
23	00
0110Mov
04	0021	028E	1902	0105
02
32	FF	01	02	FF
22	00
0110Mov
04	0020	028E	1902	0104
02
31	FF	01	02	FF
21	00
0110Mov


// mov dword ptr [esi*2+21432],5635356
05	0022	028E	1902	0803	0106
02
33	FF	01	02	03
23	00
0111Mov
05	0021	028E	1902	0803	0105
02
32	FF	01	02	03
22	00
0111Mov
05	0020	028E	1902	0803	0104
02
31	FF	01	02	03
21	00
0111Mov


//////////////////////////////////////////////////////////
// Common Instruction Routines (One operand, save type and non-save)
//////////////////////////////////////////////////////////
// Neg Eax
04	0283	0006	FEFE	0106
01
13	00
0000
04	0283	0005	FEFE	0105
01
12	00
0000
04	0283	0004	FEFE	0104
01
11	00
0000

// Neg [2345234]
04	0203	0006	FEFE	0106
01
33	FF	FF	FF	00
0001
04	0203	0005	FEFE	0105
01
32	FF	FF	FF	00
0001
04	0203	0004	FEFE	0104
01
31	FF	FF	FF	00
0001

// Neg [Eax]
04	028E	0006	FEFE	0106
01
33	00	FF	FF	FF
1000
04	028E	0005	FEFE	0105
01
32	00	FF	FF	FF
1000
04	028E	0004	FEFE	0104
01
31	00	FF	FF	FF
1000

// Not [Eax+8]
05	028E	0803	0006	FEFE	0106
01
33	00	FF	FF	01
1001
05	028E	0803	0005	FEFE	0105
01
32	00	FF	FF	01
1001
05	028E	0803	0004	FEFE	0104
01
31	00	FF	FF	01
1001

// Not [Eax+esi]
05	028E	088E	0006	FEFE	0106
01
33	00	01	FF	FF
1100
05	028E	088E	0005	FEFE	0105
01
32	00	01	FF	FF
1100
05	028E	088E	0004	FEFE	0104
01
31	00	01	FF	FF
1100

// Not [Eax+esi+234234]
06	028E	088E	0803	0006	FEFE	0106
01
33	00	01	FF	02
1101
06	028E	088E	0803	0005	FEFE	0105
01
32	00	01	FF	02
1101
06	028E	088E	0803	0004	FEFE	0104
01
31	00	01	FF	02
1101

// Not [Eax+esi*2]
06	028E	1902	088E	0006	FEFE	0106
01
33	02	00	01	FF
1110
06	028E	1902	088E	0005	FEFE	0105
01
32	02	00	01	FF
1110
06	028E	1902	088E	0004	FEFE	0104
01
31	02	00	01	FF
1110

// Not [Eax*2]
05	028E	1902	0006	FEFE	0106
01
33	FF	00	01	FF
0110
05	028E	1902	0005	FEFE	0105
01
32	FF	00	01	FF
0110
05	028E	1902	0004	FEFE	0104
01
31	FF	00	01	FF
0110

// Not [esi*2+34534]
06	028E	1902	0803	0006	FEFE	0106
01
33	FF	00	01	02
0111
06	028E	1902	0803	0005	FEFE	0105
01
32	FF	00	01	02
0111
06	028E	1902	0803	0004	FEFE	0104
01
31	FF	00	01	02
0111

// Not [esi*2+34534]
07	028E	1902	088E	0803	0006	FEFE	0106
01
33	02	00	01	03
1111
07	028E	1902	088E	0803	0005	FEFE	0105
01
32	02	00	01	03
1111
07	028E	1902	088E	0803	0004	FEFE	0104
01
31	02	00	01	03
1111


//////////////////////////////////////////////////////////
// Push Instruction Routines (WORD Variants imcompleted)
//////////////////////////////////////////////////////////
// Push Eax
07	0283	0006	028E	0C02	0106	0001	018A
01
13	00
0000Push
07	0283	0005	028E	0C02	0105	0001	018A
01
12	00
0000Push

// Push 00427cb4
06	0011	028E	0C02	0106	0001	018A
01
23	00
0000Push
06	0010	028E	0C02	0105	0001	018A
01
22	00
0000Push

// push dword ptr ds:[10000]
07	0203	0006	028E	0C02	0106	0001	018A
01
33	FF	FF	FF	00
0001Push
07	0203	0005	028E	0C02	0105	0001	018A
01
32	FF	FF	FF	00
0001Push

// push [eax]
07	028E	0006	028E	0C02	0106	0001	018A
01
33	00	FF	FF	FF
1000Push
07	028E	0005	028E	0C02	0105	0001	018A
01
32	00	FF	FF	FF
1000Push

// push dword ptr[esp+87777]
08	028E	0803	0006	028E	0C02	0106	0001	018A
01
33	00	FF	FF	01
1001Push
08	028E	0803	0005	028E	0C02	0105	0001	018A
01
32	00	FF	FF	01
1001Push

// push dword ptr[eax+esp]
08	028E	088E	0006	028E	0C02	0106	0001	018A
01
33	00	01	FF	FF
1100Push
08	028E	088E	0005	028E	0C02	0105	0001	018A
01
32	00	01	FF	FF
1100Push

// push dword ptr[eax+esp+23423]
09	028E	088E	0803	0006	028E	0C02	0106	0001	018A
01
33	00	01	FF	02
1101Push
09	028E	088E	0803	0005	028E	0C02	0105	0001	018A
01
32	00	01	FF	02
1101Push

// push dword ptr[esp+eax*2]
09	028E	1902	088E	0006	028E	0C02	0106	0001	018A
01
33	02	00	01	FF
1110Push
09	028E	1902	088E	0005	028E	0C02	0105	0001	018A
01
32	02	00	01	FF
1110Push

// push dword ptr[eax*2]
08	028E	1902	0006	028E	0C02	0106	0001	018A
01
33	FF	00	01	FF
0110Push
08	028E	1902	0005	028E	0C02	0105	0001	018A
01
32	FF	00	01	FF
0110Push

// push dword ptr[eax*2+23424]
09	028E	1902	0803	0006	028E	0C02	0106	0001	018A
01
33	FF	00	01	02
0111Push
09	028E	1902	0803	0005	028E	0C02	0105	0001	018A
01
32	FF	00	01	02
0111Push

// push dword ptr[esp+eax*2+234234]
0A	028E	1902	088E	0803	0006	028E	0C02	0106	0001	018A
01
33	02	00	01	03
1111Push
0A	028E	1902	088E	0803	0005	028E	0C02	0105	0001	018A
01
32	02	00	01	03
1111Push


//////////////////////////////////////////////////////////
// Flag Instruction Routines
//////////////////////////////////////////////////////////
01	1C00
00
0000Nop

01	1F00
00
0000Clc

01	2000
00
0000Cld

01	2100
00
0000Cli

01	2200
00
0000Cmc

01	2300
00
0000Stc

01	2400
00
0000Std

01	2500
00
0000Sti